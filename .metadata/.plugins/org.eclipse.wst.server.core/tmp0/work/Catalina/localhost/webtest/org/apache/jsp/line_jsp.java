/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.64
 * Generated at: 2016-07-13 13:12:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mysql.jdbc.Driver;
import java.sql.*;
import java.net.Socket;
import java.text.SimpleDateFormat;
import console.pdf.CreatePDF;

public final class line_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<title>图表</title>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("#Header {\n");
      out.write("\twidth:100%; \n");
      out.write("\theight: 30px;\n");
      out.write("\tline-height:30px; \n");
      out.write("\t/* background-color:#99ffff; */\n");
      out.write("\tFILTER: progid:DXImageTransform.Microsoft.Gradient(gradientType=2,startColorStr=#99ffaa,endColorStr=#99aaff); /*IE*/\n");
      out.write("\tbackground:-moz-linear-gradient(left,#99ffaa,#99aaff);/*火狐*/\n");
      out.write("\tbackground:-webkit-gradient(linear, 0% 0%, 100% 0%,from(#99ffaa), to(#99aaff));/*谷歌*/ \n");
      out.write("}\n");
      out.write("#Name {\t\n");
      out.write("\tpadding-left: 30px;\t\n");
      out.write("\twidth: 200px;\n");
      out.write("\tfloat: left; \n");
      out.write("}\n");
      out.write("\n");
      out.write("#Timer {\n");
      out.write("\tpadding-right: 30px;\n");
      out.write("\twidth: 300px;\n");
      out.write("\tfloat: right;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo {\n");
      out.write("    padding-left: 2px;\n");
      out.write("\tpadding-top: 5px;\n");
      out.write("\tpadding-bottom: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("form, ul, li, p, h1, h2, h3, h4, h5, h6 {\n");
      out.write("\tmargin: 0;\n");
      out.write("\tpadding: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("img {\n");
      out.write("\tborder: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul li {\n");
      out.write("\tlist-style-type: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("\tcolor: #00007F;\n");
      out.write("\ttext-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover {\n");
      out.write("\tcolor: #bd0a01;\n");
      out.write("\ttext-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".box {\n");
      out.write("\twidth: 150px;\n");
      out.write("\tmargin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul {\n");
      out.write("\toverflow: hidden;\n");
      out.write("\tborder-color: #C4D5DF;\n");
      out.write("\tborder-style: solid;\n");
      out.write("\tborder-width: 0 1px 1px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul li.levela {\n");
      out.write("\tfloat: left;\n");
      out.write("\tmargin: 0px 2px 0px 2px;\n");
      out.write("\twidth: 100px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul li.levela a {\n");
      out.write("\tdisplay: block;\n");
      out.write("\theight: 28px;\n");
      out.write("\tline-height: 28px;\n");
      out.write("\tbackground: #EBF3F8;\n");
      out.write("\tfont-weight: 700;\n");
      out.write("\tcolor: #5893B7;\n");
      out.write("\t/* text-indent: 14px; */\n");
      out.write("\ttext-align: center;\n");
      out.write("\t/* border-top: 1px solid #C4D5DF; */\n");
      out.write("\tborder: 1px solid #C4D5DF;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul li.levela a:hover {\n");
      out.write("\ttext-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul li.levela a.current {\n");
      out.write("\tbackground: #B1D7EF;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".menul li ul {\n");
      out.write("\toverflow: hidden;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script src=\"js/Chart.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/functions.js\" charset=\"UTF-8\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");

		String name = (String) session.getAttribute("userid");
		if (session.getAttribute("userid") == null) {
			response.sendRedirect("index.jsp");
			return;
		}
		//java.util.Date d = new java.util.Date();
		String datetime = new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date());
		//String name = request.getParameter("userName"); // 接收表单参数
	
      out.write("\n");
      out.write("\t<div id=\"Header\" >\n");
      out.write("\t\t\t<div id=\"Name\" style=\"color: #5893B7\"><h3>联舟技术</h3></div>\n");
      out.write("\t\t\t<div id=\"Timer\">\n");
      out.write("\t\t\t\t用户名：");
      out.print(name);
      out.write("\n");
      out.write("\t\t\t\t日期：");
      out.print(datetime);
      out.write("</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t<div id=\"logo\">\n");
      out.write("\t\t\t<ul class=\"menul\">\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('user.jsp')\" >隔离器</a></li>\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('video.jsp')\" >视频直播</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('jiont.jsp')\"  >中产交互器</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('jiontreq.jsp')\" >中产终端</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('line.jsp')\" style=\"background: #EDD8E6\">数据分析</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('search.jsp')\" >数据查询</a></li>\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('upgrade.jsp')\" >远程升级</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('record.jsp')\" >介绍</a></li>\t\t\n");
      out.write("\t\t\t\t\t<li class=\"levela\" ><a onclick=\"href_new('authority.jsp')\" >管理登录</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t<div>\n");
      out.write("\t\t<br/>\n");
      out.write("\t\t开始:<input type=\"text\" id='sdate' value=");
      out.print(datetime);
      out.write("\n");
      out.write("\t\t\tstyle=\"width: 90px\" onfocus=\"HS_setDate(this)\"> \n");
      out.write("\t\t结束:<input \ttype=\"text\" id='edate' value=");
      out.print(datetime);
      out.write(" \n");
      out.write("\t\t\tstyle=\"width: 90px\" onfocus=\"HS_setDate(this)\"> \n");
      out.write("\t\t批号:<input type=\"text\" id=\"number\" style=\"width: 50px; text-align: right\" /> \n");
      out.write("\t\t设备:<input type=\"text\" \tid=\"devid\" style=\"width: 50px; text-align: right\" /> \n");
      out.write("\t\t\t<label><input type=\"checkbox\" name=\"check\">温度</label> \n");
      out.write("\t\t\t<label><input type=\"checkbox\" name=\"check\">湿度</label> \n");
      out.write("\t\t\t<label><input type=\"checkbox\" name=\"check\">压差</label> \n");
      out.write("\t\t\t<label><input type=\"checkbox\" name=\"check\">浓度</label>\n");
      out.write("\t\t\t<label><input type=\"checkbox\" name=\"check\">风速</label>\n");
      out.write("\t\t\t<input type=\"submit\" value=\"查询\" style=\"width: 60px\" onclick=\"\" /> \n");
      out.write("\t\t\t<input class=\"call\" type=\"submit\" value=\"放大\" style=\"width: 60px\" onclick=\"\" /> \n");
      out.write("\t\t\t<input type=text id=\"pageid\" value=\"1\" style=\"width: 40px; text-align: right\" /> \n");
      out.write("\t\t\t<input class=\"call\" type=\"submit\" value=\"缩小\" style=\"width: 60px\" onclick=\"\" /> \n");
      out.write("\t\t\t<input type=\"submit\" value=\"分析\" style=\"width: 60px\" onclick=\"\" />\n");
      out.write("\t</div>\n");
      out.write("\t<div style=\"width: 100%\">\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<!-- <canvas id=\"canvas\" height=\"450\" width=\"600\"></canvas> -->\n");
      out.write("\t\t\t<canvas id=\"canvas\" height=\"450\" width=\"900\"></canvas>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<script>\n");
      out.write("\t\tvar randomScalingFactor = function(){ return Math.round(Math.random()*100)};\n");
      out.write("\t\tvar treeCol=new Array();\n");
      out.write("\t\tfor(var i=0;i<10;i++){\n");
      out.write("\t\t\ttreeCol[i]=new Array(); \n");
      out.write("\t\t\tfor(var j=0;j<20;j++){\n");
      out.write("\t\t\t\ttreeCol[i][j]=randomScalingFactor()+50*i;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar lineChartData = {\n");
      out.write("\t\t\tlabels : [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\n");
      out.write("\t\t\t          \"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],\n");
      out.write("\t\t\tdatasets : [\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tlabel: \"温度\",\n");
      out.write("\t\t\t\t\t//fillColor : \"rgba(220,220,220,0.2)\",\n");
      out.write("\t\t\t\t\tfillColor : \"transparent\",\n");
      out.write("\t\t\t\t\tstrokeColor : \"rgba(255,0,255,1)\",\n");
      out.write("\t\t\t\t\tpointColor : \"rgba(255,0,255,1)\",\n");
      out.write("\t\t\t\t\tpointStrokeColor : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightFill : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightStroke : \"rgba(255,0,255,1)\",\n");
      out.write("\t\t\t\t\tdata : [treeCol[0][0],treeCol[0][1],treeCol[0][2],treeCol[0][3],treeCol[0][4],\n");
      out.write("\t\t\t\t\t\ttreeCol[0][5],treeCol[0][6],treeCol[0][7],treeCol[0][8],treeCol[0][9],\n");
      out.write("\t\t\t\t\t    treeCol[0][10],treeCol[0][11],treeCol[0][12],treeCol[0][13],treeCol[0][14],\n");
      out.write("\t\t\t\t\t    treeCol[0][15],treeCol[0][16],treeCol[0][17],treeCol[0][18],treeCol[0][19]\n");
      out.write("\t\t\t\t\t]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tlabel: \"湿度\",\n");
      out.write("\t\t\t\t\t//fillColor : \"rgba(151,187,205,0.2)\",\n");
      out.write("\t\t\t\t\tfillColor : \"transparent\",\n");
      out.write("\t\t\t\t\tstrokeColor : \"rgba(151,187,205,1)\",\n");
      out.write("\t\t\t\t\tpointColor : \"rgba(151,187,205,1)\",\n");
      out.write("\t\t\t\t\tpointStrokeColor : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightFill : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightStroke : \"rgba(151,187,205,1)\",\n");
      out.write("\t\t\t\t\tdata : [treeCol[1][0],treeCol[1][1],treeCol[1][2],treeCol[1][3],treeCol[1][4],\n");
      out.write("\t\t\t\t\t\t\ttreeCol[1][5],treeCol[1][6],treeCol[1][7],treeCol[1][8],treeCol[1][9],\n");
      out.write("\t\t\t\t\t\t    treeCol[1][10],treeCol[1][11],treeCol[1][12],treeCol[1][13],treeCol[1][14],\n");
      out.write("\t\t\t\t\t\t    treeCol[1][15],treeCol[1][16],treeCol[1][17],treeCol[1][18],treeCol[1][19]\n");
      out.write("\t\t\t\t\t\t]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tlabel: \"压差\",\n");
      out.write("\t\t\t\t\t//fillColor : \"rgba(151,187,205,0.2)\",\n");
      out.write("\t\t\t\t\tfillColor : \"transparent\",\n");
      out.write("\t\t\t\t\tstrokeColor : \"rgba(100,0,100,1)\",\n");
      out.write("\t\t\t\t\tpointColor : \"rgba(100,0,100,1)\",\n");
      out.write("\t\t\t\t\tpointStrokeColor : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightFill : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightStroke : \"rgba(100,0,100,1)\",\n");
      out.write("\t\t\t\t\tdata : [treeCol[2][0],treeCol[2][1],treeCol[2][2],treeCol[2][3],treeCol[2][4],\n");
      out.write("\t\t\t\t\t\t\ttreeCol[2][5],treeCol[2][6],treeCol[2][7],treeCol[2][8],treeCol[2][9],\n");
      out.write("\t\t\t\t\t\t    treeCol[2][10],treeCol[2][11],treeCol[2][12],treeCol[2][13],treeCol[2][14],\n");
      out.write("\t\t\t\t\t\t    treeCol[2][15],treeCol[2][16],treeCol[2][17],treeCol[2][18],treeCol[2][19]\n");
      out.write("\t\t\t\t\t\t]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tlabel: \"浓度\",\n");
      out.write("\t\t\t\t\t//fillColor : \"rgba(151,187,205,0.2)\",\n");
      out.write("\t\t\t\t\tfillColor : \"transparent\",\n");
      out.write("\t\t\t\t\tstrokeColor : \"rgba(0,100,100,1)\",\n");
      out.write("\t\t\t\t\tpointColor : \"rgba(0,100,100,1)\",\n");
      out.write("\t\t\t\t\tpointStrokeColor : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightFill : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightStroke : \"rgba(0,100,100,1)\",\n");
      out.write("\t\t\t\t\tdata : [treeCol[3][0],treeCol[3][1],treeCol[3][2],treeCol[3][3],treeCol[3][4],\n");
      out.write("\t\t\t\t\t\t\ttreeCol[3][5],treeCol[3][6],treeCol[3][7],treeCol[3][8],treeCol[3][9],\n");
      out.write("\t\t\t\t\t\t    treeCol[3][10],treeCol[3][11],treeCol[3][12],treeCol[3][13],treeCol[3][14],\n");
      out.write("\t\t\t\t\t\t    treeCol[3][15],treeCol[3][16],treeCol[3][17],treeCol[3][18],treeCol[3][19]\n");
      out.write("\t\t\t\t\t\t]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tlabel: \"风速\",\n");
      out.write("\t\t\t\t\t//fillColor : \"rgba(151,187,205,0.2)\",\n");
      out.write("\t\t\t\t\tfillColor : \"transparent\",\n");
      out.write("\t\t\t\t\tstrokeColor : \"rgba(100,100,0,1)\",\n");
      out.write("\t\t\t\t\tpointColor : \"rgba(100,100,0,1)\",\n");
      out.write("\t\t\t\t\tpointStrokeColor : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightFill : \"#fff\",\n");
      out.write("\t\t\t\t\tpointHighlightStroke : \"rgba(100,100,0,1)\",\n");
      out.write("\t\t\t\t\tdata : [treeCol[4][0],treeCol[4][1],treeCol[4][2],treeCol[4][3],treeCol[4][4],\n");
      out.write("\t\t\t\t\t\t\ttreeCol[4][5],treeCol[4][6],treeCol[4][7],treeCol[4][8],treeCol[4][9],\n");
      out.write("\t\t\t\t\t\t    treeCol[4][10],treeCol[4][11],treeCol[4][12],treeCol[4][13],treeCol[4][14],\n");
      out.write("\t\t\t\t\t\t    treeCol[4][15],treeCol[4][16],treeCol[4][17],treeCol[4][18],treeCol[4][19]\n");
      out.write("\t\t\t\t\t\t]\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t]\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar options = {\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - If we show the scale above the chart data\t\t\t\n");
      out.write("\t\t\t\tscaleOverlay : false,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - If we want to override with a hard coded scale\n");
      out.write("\t\t\t\tscaleOverride : false,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//** Required if scaleOverride is true **\n");
      out.write("\t\t\t\t//Number - The number of steps in a hard coded scale\n");
      out.write("\t\t\t\tscaleSteps : null,\n");
      out.write("\t\t\t\t//Number - The value jump in the hard coded scale\n");
      out.write("\t\t\t\tscaleStepWidth : null,\n");
      out.write("\t\t\t\t//Number - The scale starting value\n");
      out.write("\t\t\t\tscaleStartValue : null,\n");
      out.write("\n");
      out.write("\t\t\t\t//String - Colour of the scale line\t\n");
      out.write("\t\t\t\tscaleLineColor : \"rgba(0,0,0,.3)\",\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Pixel width of the scale line\t\n");
      out.write("\t\t\t\tscaleLineWidth : 1,\n");
      out.write("\n");
      out.write("\t\t\t\t//Boolean - Whether to show labels on the scale\t\n");
      out.write("\t\t\t\tscaleShowLabels : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Interpolated JS string - can access value\n");
      out.write("\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//String - Scale label font declaration for the scale label\n");
      out.write("\t\t\t\tscaleFontFamily : \"'Arial'\",\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Scale label font size in pixels\t\n");
      out.write("\t\t\t\tscaleFontSize : 22,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//String - Scale label font weight style\t\n");
      out.write("\t\t\t\tscaleFontStyle : \"normal\",\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//String - Scale label font colour\t\n");
      out.write("\t\t\t\tscaleFontColor : \"#666\",\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t///Boolean - Whether grid lines are shown across the chart\n");
      out.write("\t\t\t\tscaleShowGridLines : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//String - Colour of the grid lines\n");
      out.write("\t\t\t\tscaleGridLineColor : \"rgba(0,0,0,.3)\",\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Width of the grid lines\n");
      out.write("\t\t\t\tscaleGridLineWidth : 1,\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - Whether the line is curved between points\n");
      out.write("\t\t\t\tbezierCurve : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - Whether to show a dot for each point\n");
      out.write("\t\t\t\tpointDot : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Radius of each point dot in pixels\n");
      out.write("\t\t\t\tpointDotRadius : 3,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Pixel width of point dot stroke\n");
      out.write("\t\t\t\tpointDotStrokeWidth : 1,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - Whether to show a stroke for datasets\n");
      out.write("\t\t\t\tdatasetStroke : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Number - Pixel width of dataset stroke\n");
      out.write("\t\t\t\tdatasetStrokeWidth : 2,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - Whether to fill the dataset with a colour\n");
      out.write("\t\t\t\tdatasetFill : true,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//Boolean - Whether to animate the chart\n");
      out.write("\t\t\t\tanimation : true,\n");
      out.write("\n");
      out.write("\t\t\t\t//Number - Number of animation steps\n");
      out.write("\t\t\t\tanimationSteps : 60,\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//String - Animation easing effect\n");
      out.write("\t\t\t\tanimationEasing : \"easeOutQuart\",\n");
      out.write("\n");
      out.write("\t\t\t\t//Function - Fires when the animation is complete\n");
      out.write("\t\t\t\tonAnimationComplete : null\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\twindow.onload = function(){\n");
      out.write("\t\t\tvar ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n");
      out.write("\t\t\twindow.myLine = new Chart(ctx).Line(lineChartData, options);\n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
